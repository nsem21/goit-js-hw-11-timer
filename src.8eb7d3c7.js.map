{"version":3,"sources":["index.js"],"names":["TARGET_DATE","ref","day","document","querySelector","hour","minute","second","CountdownTimer","selector","targetDate","updateTimer","setInterval","currentTime","Date","now","deltaTime","getTime","time","getReadableTime","days","pad","Math","floor","hours","mins","secs","value","String","padStart","timer","updateTimerFn","textContent","start"],"mappings":";AAqDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EArDA,IAAMA,EAAc,eACdC,EAAM,CACRC,IAAKC,SAASC,cAAc,6BAC5BC,KAAMF,SAASC,cAAc,8BAC7BE,OAAQH,SAASC,cAAc,6BAC/BG,OAAQJ,SAASC,cAAc,8BAE7BI,EAAAA,WACiD,SAAA,EAAA,GAArCC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,YAAe,EAAA,KAAA,GAC1CF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,YAAcA,EA0C3B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAxCI,MAAA,WAAQ,IAAA,EAAA,KACJC,YAAY,WACFC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKN,WAAWO,UAAYJ,EACxCK,EAAO,EAAKC,gBAAgBH,GAClC,EAAKL,YAAYO,IAClB,OAkCX,CAAA,IAAA,kBA/BI,MAAA,SAAgBA,GAML,MAAA,CAAEE,KALI,KAAKC,IAAIC,KAAKC,MAAML,EAAQ,QAK1BM,MAJD,KAAKH,IAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAI9CO,KAHT,KAAKJ,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAGlCQ,KAFf,KAAKL,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,SA2BhE,CAAA,IAAA,MAtBI,MAAA,SAAIS,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAqBzC,EA9CMrB,GA8BAsB,EAAQ,IAAItB,EAAe,CAC7BC,SAAU,WACVC,WAAY,IAAII,KAAKd,GACrBW,YAAaoB,IAGjB,SAASA,EAA2C,GAA3BX,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACxCzB,EAAIC,IAAI8B,YAAcZ,EACtBnB,EAAII,KAAK2B,YAAcR,EACvBvB,EAAIK,OAAO0B,YAAcP,EACzBxB,EAAIM,OAAOyB,YAAcN,EAM7BI,EAAMG","file":"src.8eb7d3c7.js","sourceRoot":"..\\src","sourcesContent":["const TARGET_DATE = 'Jul 17, 2021';\r\nconst ref = {\r\n    day: document.querySelector('.value[data-value=\"days\"]'),\r\n    hour: document.querySelector('.value[data-value=\"hours\"]'),\r\n    minute: document.querySelector('.value[data-value=\"mins\"]'),\r\n    second: document.querySelector('.value[data-value=\"secs\"]'),\r\n}\r\nclass CountdownTimer {\r\n    constructor({ selector, targetDate, updateTimer }) {\r\n        this.selector = selector;\r\n        this.targetDate = targetDate;\r\n        this.updateTimer = updateTimer;\r\n    }\r\n    start() {\r\n        setInterval(() => {\r\n            const currentTime = Date.now();\r\n            const deltaTime = this.targetDate.getTime() - currentTime;\r\n            const time = this.getReadableTime(deltaTime);\r\n            this.updateTimer(time);\r\n        }, 1000);\r\n    }\r\n\r\n    getReadableTime(time) {\r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n        return { days, hours, mins, secs };\r\n    }\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    }\r\n\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date(TARGET_DATE),\r\n    updateTimer: updateTimerFn\r\n});\r\n\r\nfunction updateTimerFn({ days, hours, mins, secs }) {\r\n    ref.day.textContent = days;\r\n    ref.hour.textContent = hours;\r\n    ref.minute.textContent = mins;\r\n    ref.second.textContent = secs;\r\n}\r\n\r\n\r\n\r\n\r\ntimer.start();"]}